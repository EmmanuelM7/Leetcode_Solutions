class Solution:
    def maxProfit(self, prices: List[int]) -> int:
         #Ask interviewer for minimum size of array to avoid of out bounds error
        # we could probably do this in one pass with two pointer
        #ask the interviewer of a case where numbers are descending because then there will be no profit
        
        #first create a maxProfit variable equal to 0
        #use two pointers, one starting the 0th index and the next starting at 1st
        
        #iterate through the array comparing the left and right 
        #if prices[left] > prices[right] then we know must increment the left pointer
        #we should always be incrementing the right pointer since we trying to find the max difference 
        #throughout the array
        
        
        #max profit
        maxP = 0 #we do not need to initialize to float("inf") since profit must be positive
        
        left, right = 0, 1 
        
        for i in range(len(prices) - 1):
            if prices[left] < prices[right]:
                profit = prices[right] - prices[left] 
                maxP = max(maxP, profit) 
            elif prices[left] > prices[right]: 
                left = right
            right += 1
        
        return maxP
                
        
