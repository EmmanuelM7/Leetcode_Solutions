# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        
        #Time: O(n)
        #Space: O(1)
        
        dummy = ListNode(0, head)
        prev = dummy
        current = head
        
        while current is not None and current.next is not None:
            first = current 
            second = current.next
            temp = current.next.next
            
            second.next = first
            first.next = temp
            prev.next = second
            
            #prev = current.next #this would make prev point to 3 and not 1
            
            prev = first #this would make prev point to value of 1 which is value before the new pair 
            current = temp #this should get us to the beginning of next pair
    
        
        return dummy.next
            
            
            
